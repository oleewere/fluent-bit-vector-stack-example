version: '3'
services:
  loggenerator:
    image: docker.io/oleewere/loggenerator:v0.1.0
    container_name: loggenerator
    networks:
      - fluent-bit-vector-stack-network
    environment:
      - JSON_FORMAT=false
      - DOCKER_FORMAT=true
      - SLEEP_INTERVAL_SEC=3
      - REPEAT_MESSAGES_BETWEEN_SLEEPS=5
      - USE_LOGFILE=true
      - LOGFILE=/sample/loggenerator.log
    volumes:
    - ./sample:/sample
  loggeneratorjson:
    image: docker.io/oleewere/loggenerator:v0.1.0
    container_name: loggeneratorjson
    networks:
      - fluent-bit-vector-stack-network
    environment:
      - JSON_FORMAT=true
      - DOCKER_FORMAT=true
      - SLEEP_INTERVAL_SEC=3
      - REPEAT_MESSAGES_BETWEEN_SLEEPS=5
      - USE_LOGFILE=true
      - LOGFILE=/sample/loggenerator.json.log
    volumes:
    - ./sample:/sample
  fluentbit:
    image: public.ecr.aws/aws-observability/aws-for-fluent-bit:2.23.0
    hostname: fluentbit
    container_name: fluentbit
    networks:
      - fluent-bit-vector-stack-network
    volumes:
      - ./conf/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./sample:/sample
    depends_on:
     - loggenerator
     - loggeneratorjson
     - vector
  vector:
    image: docker.io/timberio/vector:0.23.3-debian
    container_name: vector
    networks:
      - fluent-bit-vector-stack-network
    ports:
      - 24284:24284
      - 24285:24285
    volumes:
      - ./conf/vector.toml:/etc/vector/vector.toml
    depends_on:
      - zookeeper
      - kafka
      - elasticsearch
  vector_kafka:
    image: docker.io/timberio/vector:0.23.3-debian
    container_name: vector_kafka
    environment:
      - "AWS_ACCESS_KEY_ID=foo"
      - "AWS_SECRET_ACCESS_KEY=bar"
      - "AWS_DEFAULT_REGION=us-east-1"
    networks:
      - fluent-bit-vector-stack-network
    volumes:
      - ./conf/vector_kafka.toml:/etc/vector/vector.toml
    depends_on:
      - zookeeper
      - kafka
      - vector
      - kinesis
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    networks:
      - fluent-bit-vector-stack-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    networks:
      - fluent-bit-vector-stack-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    networks:
      - fluent-bit-vector-stack-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9200:9200
      - 9300:9300
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - fluent-bit-vector-stack-network
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  kinesis:
    image: "ghcr.io/etspaceman/kinesis-mock:0.2.5"
    container_name: kinesis
    networks:
      - fluent-bit-vector-stack-network
    environment:
      - "LOG_LEVEL=TRACE"
      - "INITIALIZE_STREAMS=stream1:3,stream2:2,stream3:1,stream4:2,stream5:3,stream6:5,stream7:5,stream8:3,stream9:1,stream10:3,stream11:2"
      - "SHOULD_PERSIST_DATA=true"
      - "PERSIST_PATH=/tmp/datadir1"
    healthcheck:
      test: "curl --fail http://localhost:4568/healthcheck || exit 1"
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "4567:4567"
      - "4568:4568"
networks:
  fluent-bit-vector-stack-network:
    driver: bridge